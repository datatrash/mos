{
  "name": "ASM",
  "scopeName": "source.asm",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#mnemonic"
    },
    {
      "include": "#directive"
    },
    {
      "include": "#label"
    },
    {
      "include": "#hex-literal"
    },
    {
      "include": "#dec-literal"
    },
    {
      "include": "#bin-literal"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.block.asm",
          "begin": "/\\*",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.asm"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.asm"
            }
          }
        },
        {
          "begin": "//",
          "beginCaptures": {
            "0": {
              "name": "comment.line.double-slash.asm"
            }
          },
          "end": "(?=$)",
          "contentName": "comment.line.double-slash.asm"
        }
      ]
    },
    "mnemonic": {
      "patterns": [
        {
          "name": "keyword.mnemonic.asm",
          "match": "adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya"
        }
      ]
    },
    "directive": {
      "patterns": [
        {
          "name": "entity.name.function.preprocessor.asm",
          "match": "(\\W+|\\s|\\A)(.const|.var|.byte|.word|.dword|.macro|.define|.segment|.loop|.align|.if|else|as|.import|from|.text|ascii|petscii|petscreen|.file)(\\s|\\z)"
        }
      ]
    },
    "label": {
      "patterns": [
        {
          "name": "support.type.asm",
          "match": "\\s*(\\w+)\\:"
        }
      ]
    },
    "hex-literal": {
      "patterns": [
        {
          "name": "constant.numeric.hexadecimal.asm",
          "match": "#?\\$[0-9A-Fa-f]+"
        }
      ]
    },
    "dec-literal": {
      "patterns": [
        {
          "name": "constant.numeric.decimal.asm",
          "match": "\\b#?[0-9]+"
        }
      ]
    },
    "bin-literal": {
      "patterns": [
        {
          "name": "constant.numeric.binary.asm",
          "match": "#?\\%[0-1]+"
        }
      ]
    }
  }
}